{"version":3,"sources":["components/Interface.js","components/Task.js","components/TaskList.js","components/App.js","reportWebVitals.js","index.js"],"names":["Interface","state","text","checked","date","Date","toISOString","slice","changeTime","e","setState","target","value","getMaxDate","daterange","setDate","getDate","handlechange","name","console","log","id","handleSubmit","preventDefault","length","props","add","alert","className","onSubmit","this","htmlFor","type","onChange","min","max","Component","Task","finishDate","finish","toLocaleString","style","important","color","onClick","done","bind","delete","TaskList","activeTasks","tasks","filter","task","active","doneTasks","sort","a","b","toLowerCase","map","App","getTime","doneTask","index","findIndex","data","dateString","deleteTask","splice","addTask","newTask","allTasks","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0cae560e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Interface.css'\r\n\r\n\r\nclass  Interface extends Component {\r\n    state={\r\n        text: \"\",\r\n        checked: false,\r\n        date: new Date().toISOString().slice(0,10)\r\n\r\n    }\r\n\r\n    changeTime =(e) =>{\r\n        this.setState({\r\n            date: e.target.value\r\n        })\r\n    }\r\n\r\n    getMaxDate =() =>{\r\n        let daterange = new Date();\r\n        daterange.setDate(daterange.getDate() + 365);\r\n        return daterange.toISOString().slice(0,10);\r\n    }\r\n\r\n    \r\n    handlechange =(e) =>{\r\n        if(e.target.name === \"check\"){\r\n            this.setState({\r\n                checked: e.target.checked\r\n            })\r\n        }else{\r\n            console.log(\"something else\")\r\n            this.setState({\r\n                [e.target.id]: e.target.value\r\n            })\r\n        }\r\n    }\r\n\r\n    handleSubmit =(e) =>{\r\n        e.preventDefault()\r\n        // const {text, checked, date} = this.state;\r\n\r\n\r\n        if(this.state.text.length > 3){\r\n            this.props.add(this.state.text, this.state.checked, this.state.date);\r\n        }else{\r\n            alert(`${this.state.text.length} znaki to za mała wartość dla tego pola`)\r\n        }\r\n\r\n        this.setState({\r\n            text: \" \",\r\n            checked: false,\r\n            date: new Date().toISOString().slice(0,10)\r\n        })\r\n    }\r\n    render() { \r\n\r\n        return ( \r\n            <div className=\"interface\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label htmlFor =\"text\">Nazwa zadania:</label>\r\n                    <input type=\"text\" id=\"text\" value ={this.state.text} onChange ={this.handlechange}></input>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <input type=\"date\" id =\"date\" onChange ={this.changeTime} value ={this.state.date} min={new Date().toISOString().slice(0,10)} max={this.getMaxDate()}></input>\r\n                    <label htmlFor=\"check\">Ważne?<input type=\"checkbox\" id=\"checked\" name=\"check\" checked= {this.state.checked} onChange ={this.handlechange}></input></label>\r\n                    <button type=\"submit\">Dodaj zadanie</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Interface;","import React from 'react';\r\nimport './Task.css'\r\n\r\nconst Task = (props) =>{\r\n\r\n    const style = {color:\"red\"}\r\n\r\n    let finishDate;\r\n\r\n    if(props.finish){\r\n        finishDate = new Date(props.finish).toLocaleString();\r\n    }\r\n\r\nreturn(\r\n    <>\r\n     <div className =\"task\">\r\n        <span style={props.important? style: {}}>{props.text}    _</span><span>{props.date}  </span>\r\n        <button className=\"done\" onClick ={props.done.bind(this, props.id)}>ZROBIONE</button> \r\n        <button onClick = {props.delete.bind(this, props.id)} className=\"delete\">X</button>\r\n      </div>\r\n        {props.finish? <p className=\"finishdate\">(Ukończono: {finishDate})</p>: null}\r\n    </>\r\n)\r\n}\r\n\r\nexport default Task;","import React from 'react';\r\nimport Task from './Task'\r\nimport './TaskList.css'\r\n\r\n\r\nconst TaskList = (props) =>{\r\n\r\n \r\n    let activeTasks = [...props.tasks].filter(task => task.active === true);\r\n\r\n    let doneTasks = [...props.tasks].filter(task => task.active === false);\r\n\r\n  \r\n\r\n    activeTasks.sort((a,b) => {\r\n        if(a.text[0].toLowerCase() < b.text[0].toLowerCase()){\r\n            return -1;\r\n        }\r\n        if(a.text[0].toLowerCase() > b.text[0].toLowerCase()){\r\n            return 1;\r\n        }\r\n        return 0;\r\n    });\r\n\r\n    doneTasks.sort((a,b) => {\r\n        if(a.date < b.date){\r\n            return -1;\r\n        }\r\n        if(a.date > b.date){\r\n            return 1;\r\n        }\r\n        return 0;\r\n    });\r\n\r\n\r\n    activeTasks = activeTasks.map(task =>{\r\n        return(\r\n            <Task \r\n                key ={task.id} \r\n                id={task.id}\r\n                important = {task.important}\r\n                text ={task.text}\r\n                finish = {task.finish}\r\n                date ={new Date(task.date).toISOString().slice(0,10)} \r\n                done ={props.done} \r\n                delete = {props.delete}\r\n             />  \r\n        )\r\n    })\r\n\r\n    doneTasks = doneTasks.map(task =>{\r\n        return(\r\n            <Task \r\n                key ={task.id} \r\n                text ={task.text} \r\n                date ={new Date(task.date).toISOString().slice(0,10)} \r\n                finish = {task.finish}\r\n                done ={props.done} \r\n                id={task.id}\r\n                delete = {props.delete}\r\n            />\r\n        )\r\n    })\r\n\r\n\r\n    return(\r\n        <div className=\"tasklist\">\r\n            <table>\r\n            <tr>\r\n                <td>{activeTasks.length === 0 ? \"Brak żadnych zadań\": activeTasks}<td>\r\n                <td></td>\r\n                <hr></hr>\r\n                </td>{doneTasks.length === 0? \"TU pojawią się twoje ukończone zadania\": doneTasks}</td>\r\n            </tr>\r\n            </table>\r\n        </div>\r\n        \r\n        \r\n        \r\n        \r\n    )\r\n}\r\nexport default TaskList;","import React, { Component } from 'react';\nimport Interface from './Interface';\nimport TaskList from './TaskList';\n\nclass App extends Component {\n  state ={\n    tasks:[\n      {\n        id: 1,\n        text: \"Dummy Task\",\n        active: true,\n        important: false,\n        date: new Date().getTime(),\n        finish: null,\n      },\n    ]\n  }\n\n\n  doneTask = (id) =>{\n\n    const index = this.state.tasks.findIndex(task => task.id === id)\n    const data = [...this.state.tasks]\n    \n\n    const dateString = new Date().getTime()\n\n    data[index].active = false;\n    data[index].finish = dateString;\n\n    \n\n    this.setState({\n      tasks: data \n    })\n\n    // this.setState()\n  }\n\n  deleteTask =(id) =>{\n\n    const index = this.state.tasks.findIndex(task => task.id === id)\n\n    const tasks = [...this.state.tasks];\n\n    tasks.splice(index,1)\n\n    this.setState({\n      tasks: tasks\n    })\n\n  }\n\n  addTask = (text, important, date) =>{\n\n    let id = this.state.tasks[this.state.tasks.length-1].id;\n\n    console.log(id)\n \n    const newTask ={\n        id: ++id,\n        text: text,\n        active: true,\n        important: important,\n        date: new Date(`${date}`).getTime(),\n        finish: null,\n    }\n\n    const allTasks = [...this.state.tasks, newTask];\n\n    this.setState({\n      tasks: allTasks\n    })\n  }\n  render() { \n    return ( \n      <>\n        <Interface add={this.addTask}/>\n        <TaskList tasks = {this.state.tasks} done ={this.doneTask} delete = {this.deleteTask}/>\n        <div>test</div>\n      \n      </>\n    );\n  }\n}\n \nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}